

================================================================
== Vivado HLS Report for 'matrixmul'
================================================================
* Date:           Tue Oct 11 20:55:56 2022

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        matrixmul_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z007s-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  | 13.33 ns | 10.014 ns |   1.67 ns  |
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                   Pipeline                  |
    |   min   |   max   |    min   |    max   | min | max |                     Type                    |
    +---------+---------+----------+----------+-----+-----+---------------------------------------------+
    |       10|       11| 0.133 us | 0.147 us |    9|    9| loop rewind(delay=0 initiation interval(s)) |
    +---------+---------+----------+----------+-----+-----+---------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+---------+---------+----------+-----------+-----------+------+----------+
        |           |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Row_Col  |       10|       10|         3|          1|          1|     9|    yes   |
        +-----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 2 4 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 
3 --> 2 
4 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%b_copy_2_2_1 = alloca i8"   --->   Operation 5 'alloca' 'b_copy_2_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%b_copy_2_2_2 = alloca i8"   --->   Operation 6 'alloca' 'b_copy_2_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%b_copy_2_2_3 = alloca i8"   --->   Operation 7 'alloca' 'b_copy_2_2_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%b_copy_1_2_1 = alloca i8"   --->   Operation 8 'alloca' 'b_copy_1_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%b_copy_1_2_2 = alloca i8"   --->   Operation 9 'alloca' 'b_copy_1_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%b_copy_1_2_3 = alloca i8"   --->   Operation 10 'alloca' 'b_copy_1_2_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%b_copy_0_2_1 = alloca i8"   --->   Operation 11 'alloca' 'b_copy_0_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%b_copy_0_2_2 = alloca i8"   --->   Operation 12 'alloca' 'b_copy_0_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%b_copy_0_2_3 = alloca i8"   --->   Operation 13 'alloca' 'b_copy_0_2_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%a_row_2_1 = alloca i8"   --->   Operation 14 'alloca' 'a_row_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%a_row_1_1 = alloca i8"   --->   Operation 15 'alloca' 'a_row_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%a_row_0 = alloca i8"   --->   Operation 16 'alloca' 'a_row_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i24* %a, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 17 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i24* %b, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 18 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %res, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmul.cpp:57]   --->   Operation 19 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.76ns)   --->   "br label %rewind_header"   --->   Operation 20 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 4.88>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%do_init = phi i1 [ true, %0 ], [ false, %Col_end ], [ true, %1 ]"   --->   Operation 21 'phi' 'do_init' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%i18 = phi i2 [ 1, %0 ], [ %i, %Col_end ], [ 1, %1 ]"   --->   Operation 22 'phi' 'i18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%icmp_ln6517 = phi i1 [ false, %0 ], [ %icmp_ln65, %Col_end ], [ false, %1 ]" [matrixmul.cpp:65]   --->   Operation 23 'phi' 'icmp_ln6517' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%j_016 = phi i2 [ 0, %0 ], [ %j, %Col_end ], [ 0, %1 ]"   --->   Operation 24 'phi' 'j_016' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%i_03 = phi i2 [ 0, %0 ], [ %select_ln63, %Col_end ], [ 0, %1 ]" [matrixmul.cpp:63]   --->   Operation 25 'phi' 'i_03' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%indvar_flatten2 = phi i4 [ 0, %0 ], [ %add_ln63, %Col_end ], [ 0, %1 ]" [matrixmul.cpp:63]   --->   Operation 26 'phi' 'indvar_flatten2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "br i1 %do_init, label %rewind_init, label %Col_begin"   --->   Operation 27 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.99ns)   --->   "%select_ln65 = select i1 %icmp_ln6517, i2 0, i2 %j_016" [matrixmul.cpp:65]   --->   Operation 28 'select' 'select_ln65' <Predicate = true> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.99ns)   --->   "%select_ln63 = select i1 %icmp_ln6517, i2 %i18, i2 %i_03" [matrixmul.cpp:63]   --->   Operation 29 'select' 'select_ln63' <Predicate = true> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.95ns)   --->   "%icmp_ln70 = icmp eq i2 %select_ln65, 0" [matrixmul.cpp:70]   --->   Operation 30 'icmp' 'icmp_ln70' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (1.73ns)   --->   "%add_ln63 = add i4 %indvar_flatten2, 1" [matrixmul.cpp:63]   --->   Operation 31 'add' 'add_ln63' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "br i1 %icmp_ln70, label %.preheader1.preheader, label %.loopexit2" [matrixmul.cpp:70]   --->   Operation 32 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (3.63ns)   --->   "%a_read = call i24 @_ssdm_op_Read.ap_fifo.volatile.i24P(i24* %a)" [matrixmul.cpp:72]   --->   Operation 33 'read' 'a_read' <Predicate = (icmp_ln70)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 0> <FIFO>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%a_row_0_1 = trunc i24 %a_read to i8" [matrixmul.cpp:72]   --->   Operation 34 'trunc' 'a_row_0_1' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%a_row_1 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %a_read, i32 8, i32 15)" [matrixmul.cpp:72]   --->   Operation 35 'partselect' 'a_row_1' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%a_row_2 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %a_read, i32 16, i32 23)" [matrixmul.cpp:72]   --->   Operation 36 'partselect' 'a_row_2' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "store i8 %a_row_1, i8* %a_row_1_1" [matrixmul.cpp:72]   --->   Operation 37 'store' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "store i8 %a_row_2, i8* %a_row_2_1" [matrixmul.cpp:72]   --->   Operation 38 'store' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.95ns)   --->   "%icmp_ln75 = icmp eq i2 %select_ln63, 0" [matrixmul.cpp:75]   --->   Operation 39 'icmp' 'icmp_ln75' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "br i1 %icmp_ln75, label %.preheader.preheader_ifconv, label %Col_end" [matrixmul.cpp:75]   --->   Operation 40 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%b_copy_2_2_1_load = load i8* %b_copy_2_2_1" [matrixmul.cpp:77]   --->   Operation 41 'load' 'b_copy_2_2_1_load' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%b_copy_2_2_2_load = load i8* %b_copy_2_2_2" [matrixmul.cpp:77]   --->   Operation 42 'load' 'b_copy_2_2_2_load' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%b_copy_2_2_3_load = load i8* %b_copy_2_2_3" [matrixmul.cpp:77]   --->   Operation 43 'load' 'b_copy_2_2_3_load' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%b_copy_1_2_1_load = load i8* %b_copy_1_2_1" [matrixmul.cpp:77]   --->   Operation 44 'load' 'b_copy_1_2_1_load' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%b_copy_1_2_2_load = load i8* %b_copy_1_2_2" [matrixmul.cpp:77]   --->   Operation 45 'load' 'b_copy_1_2_2_load' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%b_copy_1_2_3_load = load i8* %b_copy_1_2_3" [matrixmul.cpp:77]   --->   Operation 46 'load' 'b_copy_1_2_3_load' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%b_copy_0_2_1_load = load i8* %b_copy_0_2_1" [matrixmul.cpp:77]   --->   Operation 47 'load' 'b_copy_0_2_1_load' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%b_copy_0_2_2_load = load i8* %b_copy_0_2_2" [matrixmul.cpp:77]   --->   Operation 48 'load' 'b_copy_0_2_2_load' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%b_copy_0_2_3_load = load i8* %b_copy_0_2_3" [matrixmul.cpp:77]   --->   Operation 49 'load' 'b_copy_0_2_3_load' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (3.63ns)   --->   "%b_read = call i24 @_ssdm_op_Read.ap_fifo.volatile.i24P(i24* %b)" [matrixmul.cpp:77]   --->   Operation 50 'read' 'b_read' <Predicate = (icmp_ln75)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 0> <FIFO>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%b_copy_0_2_10 = trunc i24 %b_read to i8" [matrixmul.cpp:77]   --->   Operation 51 'trunc' 'b_copy_0_2_10' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%b_copy_1_2_10 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %b_read, i32 8, i32 15)" [matrixmul.cpp:77]   --->   Operation 52 'partselect' 'b_copy_1_2_10' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%b_copy_2_2_10 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %b_read, i32 16, i32 23)" [matrixmul.cpp:77]   --->   Operation 53 'partselect' 'b_copy_2_2_10' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.95ns)   --->   "%icmp_ln77 = icmp eq i2 %select_ln65, 1" [matrixmul.cpp:77]   --->   Operation 54 'icmp' 'icmp_ln77' <Predicate = (icmp_ln75)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node b_copy_2_2_5)   --->   "%b_copy_2_2 = select i1 %icmp_ln77, i8 %b_copy_2_2_1_load, i8 %b_copy_2_2_10" [matrixmul.cpp:77]   --->   Operation 55 'select' 'b_copy_2_2' <Predicate = (icmp_ln75)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (1.24ns) (out node of the LUT)   --->   "%b_copy_2_2_5 = select i1 %icmp_ln70, i8 %b_copy_2_2_1_load, i8 %b_copy_2_2" [matrixmul.cpp:77]   --->   Operation 56 'select' 'b_copy_2_2_5' <Predicate = (icmp_ln75)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node b_copy_2_2_7)   --->   "%b_copy_2_2_6 = select i1 %icmp_ln77, i8 %b_copy_2_2_10, i8 %b_copy_2_2_2_load" [matrixmul.cpp:77]   --->   Operation 57 'select' 'b_copy_2_2_6' <Predicate = (icmp_ln75)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (1.24ns) (out node of the LUT)   --->   "%b_copy_2_2_7 = select i1 %icmp_ln70, i8 %b_copy_2_2_2_load, i8 %b_copy_2_2_6" [matrixmul.cpp:77]   --->   Operation 58 'select' 'b_copy_2_2_7' <Predicate = (icmp_ln75)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (1.24ns)   --->   "%b_copy_2_2_9 = select i1 %icmp_ln70, i8 %b_copy_2_2_10, i8 %b_copy_2_2_3_load" [matrixmul.cpp:77]   --->   Operation 59 'select' 'b_copy_2_2_9' <Predicate = (icmp_ln75)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node b_copy_1_2_5)   --->   "%b_copy_1_2 = select i1 %icmp_ln77, i8 %b_copy_1_2_1_load, i8 %b_copy_1_2_10" [matrixmul.cpp:77]   --->   Operation 60 'select' 'b_copy_1_2' <Predicate = (icmp_ln75)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (1.24ns) (out node of the LUT)   --->   "%b_copy_1_2_5 = select i1 %icmp_ln70, i8 %b_copy_1_2_1_load, i8 %b_copy_1_2" [matrixmul.cpp:77]   --->   Operation 61 'select' 'b_copy_1_2_5' <Predicate = (icmp_ln75)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node b_copy_1_2_7)   --->   "%b_copy_1_2_6 = select i1 %icmp_ln77, i8 %b_copy_1_2_10, i8 %b_copy_1_2_2_load" [matrixmul.cpp:77]   --->   Operation 62 'select' 'b_copy_1_2_6' <Predicate = (icmp_ln75)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (1.24ns) (out node of the LUT)   --->   "%b_copy_1_2_7 = select i1 %icmp_ln70, i8 %b_copy_1_2_2_load, i8 %b_copy_1_2_6" [matrixmul.cpp:77]   --->   Operation 63 'select' 'b_copy_1_2_7' <Predicate = (icmp_ln75)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (1.24ns)   --->   "%b_copy_1_2_9 = select i1 %icmp_ln70, i8 %b_copy_1_2_10, i8 %b_copy_1_2_3_load" [matrixmul.cpp:77]   --->   Operation 64 'select' 'b_copy_1_2_9' <Predicate = (icmp_ln75)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node b_copy_0_2_5)   --->   "%b_copy_0_2 = select i1 %icmp_ln77, i8 %b_copy_0_2_1_load, i8 %b_copy_0_2_10" [matrixmul.cpp:77]   --->   Operation 65 'select' 'b_copy_0_2' <Predicate = (icmp_ln75)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (1.24ns) (out node of the LUT)   --->   "%b_copy_0_2_5 = select i1 %icmp_ln70, i8 %b_copy_0_2_1_load, i8 %b_copy_0_2" [matrixmul.cpp:77]   --->   Operation 66 'select' 'b_copy_0_2_5' <Predicate = (icmp_ln75)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node b_copy_0_2_7)   --->   "%b_copy_0_2_6 = select i1 %icmp_ln77, i8 %b_copy_0_2_10, i8 %b_copy_0_2_2_load" [matrixmul.cpp:77]   --->   Operation 67 'select' 'b_copy_0_2_6' <Predicate = (icmp_ln75)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (1.24ns) (out node of the LUT)   --->   "%b_copy_0_2_7 = select i1 %icmp_ln70, i8 %b_copy_0_2_2_load, i8 %b_copy_0_2_6" [matrixmul.cpp:77]   --->   Operation 68 'select' 'b_copy_0_2_7' <Predicate = (icmp_ln75)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (1.24ns)   --->   "%b_copy_0_2_9 = select i1 %icmp_ln70, i8 %b_copy_0_2_10, i8 %b_copy_0_2_3_load" [matrixmul.cpp:77]   --->   Operation 69 'select' 'b_copy_0_2_9' <Predicate = (icmp_ln75)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "store i8 %b_copy_0_2_9, i8* %b_copy_0_2_3" [matrixmul.cpp:77]   --->   Operation 70 'store' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "store i8 %b_copy_0_2_7, i8* %b_copy_0_2_2" [matrixmul.cpp:77]   --->   Operation 71 'store' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "store i8 %b_copy_0_2_5, i8* %b_copy_0_2_1" [matrixmul.cpp:77]   --->   Operation 72 'store' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "store i8 %b_copy_1_2_9, i8* %b_copy_1_2_3" [matrixmul.cpp:77]   --->   Operation 73 'store' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "store i8 %b_copy_1_2_7, i8* %b_copy_1_2_2" [matrixmul.cpp:77]   --->   Operation 74 'store' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "store i8 %b_copy_1_2_5, i8* %b_copy_1_2_1" [matrixmul.cpp:77]   --->   Operation 75 'store' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "store i8 %b_copy_2_2_9, i8* %b_copy_2_2_3" [matrixmul.cpp:77]   --->   Operation 76 'store' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "store i8 %b_copy_2_2_7, i8* %b_copy_2_2_2" [matrixmul.cpp:77]   --->   Operation 77 'store' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "store i8 %b_copy_2_2_5, i8* %b_copy_2_2_1" [matrixmul.cpp:77]   --->   Operation 78 'store' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "br label %Col_end"   --->   Operation 79 'br' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (1.56ns)   --->   "%j = add i2 %select_ln65, 1" [matrixmul.cpp:65]   --->   Operation 80 'add' 'j' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (0.95ns)   --->   "%icmp_ln65 = icmp eq i2 %j, -1" [matrixmul.cpp:65]   --->   Operation 81 'icmp' 'icmp_ln65' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (1.56ns)   --->   "%i = add i2 %select_ln63, 1" [matrixmul.cpp:63]   --->   Operation 82 'add' 'i' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (1.30ns)   --->   "%icmp_ln63 = icmp eq i4 %indvar_flatten2, -8" [matrixmul.cpp:63]   --->   Operation 83 'icmp' 'icmp_ln63' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "br i1 %icmp_ln63, label %1, label %rewind_header" [matrixmul.cpp:63]   --->   Operation 84 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "br label %rewind_header" [matrixmul.cpp:85]   --->   Operation 85 'br' <Predicate = (icmp_ln63)> <Delay = 0.00>

State 3 <SV = 3> <Delay = 10.0>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i24* %a), !map !7"   --->   Operation 86 'specbitsmap' <Predicate = (do_init)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i24* %b), !map !24"   --->   Operation 87 'specbitsmap' <Predicate = (do_init)> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %res), !map !37"   --->   Operation 88 'specbitsmap' <Predicate = (do_init)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matrixmul_str) nounwind"   --->   Operation 89 'spectopmodule' <Predicate = (do_init)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "br label %Col_begin"   --->   Operation 90 'br' <Predicate = (do_init)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @Row_Col_str)"   --->   Operation 91 'specloopname' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)"   --->   Operation 92 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str4) nounwind" [matrixmul.cpp:65]   --->   Operation 93 'specloopname' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str4) nounwind" [matrixmul.cpp:65]   --->   Operation 94 'specregionbegin' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [matrixmul.cpp:66]   --->   Operation 95 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%a_row_0_load = load i8* %a_row_0" [matrixmul.cpp:82]   --->   Operation 96 'load' 'a_row_0_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%sext_ln82 = sext i8 %a_row_0_load to i16" [matrixmul.cpp:82]   --->   Operation 97 'sext' 'sext_ln82' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%sext_ln82_1 = sext i8 %tmp_1 to i16" [matrixmul.cpp:82]   --->   Operation 98 'sext' 'sext_ln82_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (3.36ns) (grouped into DSP with root node add_ln82_1)   --->   "%mul_ln82 = mul i16 %sext_ln82, %sext_ln82_1" [matrixmul.cpp:82]   --->   Operation 99 'mul' 'mul_ln82' <Predicate = true> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 100 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln82_1 = add i16 %add_ln82, %mul_ln82" [matrixmul.cpp:82]   --->   Operation 100 'add' 'add_ln82_1' <Predicate = true> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 101 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %res, i16 %add_ln82_1)" [matrixmul.cpp:82]   --->   Operation 101 'write' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 0> <FIFO>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str4, i32 %tmp_3) nounwind" [matrixmul.cpp:83]   --->   Operation 102 'specregionend' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_Return()" [matrixmul.cpp:85]   --->   Operation 103 'return' <Predicate = (icmp_ln63)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 8.96>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "store i8 %a_row_0_1, i8* %a_row_0" [matrixmul.cpp:72]   --->   Operation 104 'store' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "br label %.loopexit2"   --->   Operation 105 'br' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%b_copy_2_2_1_load_1 = load i8* %b_copy_2_2_1"   --->   Operation 106 'load' 'b_copy_2_2_1_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "%b_copy_2_2_2_load_1 = load i8* %b_copy_2_2_2"   --->   Operation 107 'load' 'b_copy_2_2_2_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "%b_copy_2_2_11 = load i8* %b_copy_2_2_3"   --->   Operation 108 'load' 'b_copy_2_2_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "%b_copy_1_2_1_load_1 = load i8* %b_copy_1_2_1"   --->   Operation 109 'load' 'b_copy_1_2_1_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%b_copy_1_2_2_load_1 = load i8* %b_copy_1_2_2"   --->   Operation 110 'load' 'b_copy_1_2_2_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%b_copy_1_2_11 = load i8* %b_copy_1_2_3"   --->   Operation 111 'load' 'b_copy_1_2_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%b_copy_0_2_1_load_1 = load i8* %b_copy_0_2_1"   --->   Operation 112 'load' 'b_copy_0_2_1_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "%b_copy_0_2_2_load_1 = load i8* %b_copy_0_2_2"   --->   Operation 113 'load' 'b_copy_0_2_2_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "%b_copy_0_2_11 = load i8* %b_copy_0_2_3"   --->   Operation 114 'load' 'b_copy_0_2_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%a_row_2_1_load = load i8* %a_row_2_1" [matrixmul.cpp:82]   --->   Operation 115 'load' 'a_row_2_1_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "%a_row_1_1_load = load i8* %a_row_1_1" [matrixmul.cpp:82]   --->   Operation 116 'load' 'a_row_1_1_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (1.77ns)   --->   "%tmp_1 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %b_copy_0_2_11, i8 %b_copy_0_2_2_load_1, i8 %b_copy_0_2_1_load_1, i2 %select_ln65)" [matrixmul.cpp:80]   --->   Operation 117 'mux' 'tmp_1' <Predicate = true> <Delay = 1.77> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "%sext_ln82_2 = sext i8 %a_row_1_1_load to i16" [matrixmul.cpp:82]   --->   Operation 118 'sext' 'sext_ln82_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (1.77ns)   --->   "%tmp_2 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %b_copy_1_2_11, i8 %b_copy_1_2_2_load_1, i8 %b_copy_1_2_1_load_1, i2 %select_ln65)" [matrixmul.cpp:80]   --->   Operation 119 'mux' 'tmp_2' <Predicate = true> <Delay = 1.77> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%sext_ln82_3 = sext i8 %tmp_2 to i16" [matrixmul.cpp:82]   --->   Operation 120 'sext' 'sext_ln82_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (4.17ns)   --->   "%mul_ln82_1 = mul i16 %sext_ln82_2, %sext_ln82_3" [matrixmul.cpp:82]   --->   Operation 121 'mul' 'mul_ln82_1' <Predicate = true> <Delay = 4.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "%sext_ln82_4 = sext i8 %a_row_2_1_load to i16" [matrixmul.cpp:82]   --->   Operation 122 'sext' 'sext_ln82_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (1.77ns)   --->   "%tmp_4 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %b_copy_2_2_11, i8 %b_copy_2_2_2_load_1, i8 %b_copy_2_2_1_load_1, i2 %select_ln65)" [matrixmul.cpp:80]   --->   Operation 123 'mux' 'tmp_4' <Predicate = true> <Delay = 1.77> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 124 [1/1] (0.00ns)   --->   "%sext_ln82_5 = sext i8 %tmp_4 to i16" [matrixmul.cpp:82]   --->   Operation 124 'sext' 'sext_ln82_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 125 [1/1] (3.36ns) (grouped into DSP with root node add_ln82)   --->   "%mul_ln82_2 = mul i16 %sext_ln82_4, %sext_ln82_5" [matrixmul.cpp:82]   --->   Operation 125 'mul' 'mul_ln82_2' <Predicate = true> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 126 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln82 = add i16 %mul_ln82_1, %mul_ln82_2" [matrixmul.cpp:82]   --->   Operation 126 'add' 'add_ln82' <Predicate = true> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 13.3ns, clock uncertainty: 1.67ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('do_init') [21]  (1.77 ns)

 <State 2>: 4.88ns
The critical path consists of the following:
	fifo read on port 'b' (matrixmul.cpp:77) [67]  (3.63 ns)
	'select' operation ('b_copy[2][2]', matrixmul.cpp:77) [72]  (0 ns)
	'select' operation ('b_copy[2][2]', matrixmul.cpp:77) [73]  (1.25 ns)

 <State 3>: 10ns
The critical path consists of the following:
	'load' operation ('a_row_0_load', matrixmul.cpp:82) on local variable 'a_row[0]' [109]  (0 ns)
	'mul' operation of DSP[123] ('mul_ln82', matrixmul.cpp:82) [113]  (3.36 ns)
	'add' operation of DSP[123] ('add_ln82_1', matrixmul.cpp:82) [123]  (3.02 ns)
	fifo write on port 'res' (matrixmul.cpp:82) [124]  (3.63 ns)

 <State 4>: 8.96ns
The critical path consists of the following:
	'load' operation ('b_copy_1_2_1_load_1') on local variable 'b_copy[1][2]' [101]  (0 ns)
	'mux' operation ('tmp_2', matrixmul.cpp:80) [115]  (1.77 ns)
	'mul' operation ('mul_ln82_1', matrixmul.cpp:82) [117]  (4.17 ns)
	'add' operation of DSP[122] ('add_ln82', matrixmul.cpp:82) [122]  (3.02 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
